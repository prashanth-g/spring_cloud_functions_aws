buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
        wrapperVersion = '1.0.13.BUILD-SNAPSHOT'
        shadowVersion = '2.0.1'
    }
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:${shadowVersion}"
        classpath("org.springframework.boot.experimental:spring-boot-thin-gradle-plugin:${wrapperVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.springframework.boot.experimental.thin-launcher'

group = 'com.prashanth'
version = '2.0.0.BUILD-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

ext {
    springCloudFunctionVersion = "1.0.0.BUILD-SNAPSHOT"
    awsLambdaEventsVersion = "1.2.1"
    awsLambdaCoreVersion = "1.2.0"
}
ext['reactor.version'] = "3.1.7.RELEASE"

assemble.dependsOn = [shadowJar, thinJar]

jar {
    manifest {
        attributes 'Main-Class': 'example.Config'
    }
}

<<<<<<< HEAD
    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-function-compiler
    compile group: 'org.springframework.cloud', name: 'spring-cloud-function-compiler', version: '1.0.1.RELEASE'
!
    compileOnly("com.amazonaws:aws-lambda-java-events:1.2.1")
    compileOnly("com.amazonaws:aws-lambda-java-core:1.1.0")
=======
import com.github.jengelman.gradle.plugins.shadow.transformers.*

shadowJar {
    classifier = 'lambda'
    dependencies {
        exclude(dependency("org.springframework.cloud:spring-cloud-function-web:${springCloudFunctionVersion}"))
    }
    mergeServiceFiles()
    append 'META-INF/spring.handlers'
    append 'META-INF/spring.schemas'
    append 'META-INF/spring.tooling'
    transform(PropertiesFileTransformer) {
        paths = ['META-INF/spring.factories' ]
        mergeStrategy = "append"
    }
}

configurations {
    testCompile.extendsFrom(compileOnly)
}
>>>>>>> 524a761... Added Serverless configuration and updated handler

dependencies {
    compile("org.springframework.cloud:spring-cloud-starter-function-web:${springCloudFunctionVersion}")
    compile("org.springframework.cloud:spring-cloud-function-adapter-aws:${springCloudFunctionVersion}")
    compileOnly("com.amazonaws:aws-lambda-java-events:${awsLambdaEventsVersion}")
    compileOnly("com.amazonaws:aws-lambda-java-core:${awsLambdaCoreVersion}")
    testCompile('org.springframework.boot:spring-boot-starter-test')
}